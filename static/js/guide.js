// Guide page JavaScript functionality

document.addEventListener('DOMContentLoaded', function () {
    // Mobile menu toggle functionality
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const navMenu = document.querySelector('.nav-menu');

    if (mobileMenuBtn && navMenu) {
        mobileMenuBtn.addEventListener('click', function () {
            const isExpanded = this.getAttribute('aria-expanded') === 'true';

            // Toggle menu visibility
            navMenu.classList.toggle('active');

            // Update ARIA attributes
            this.setAttribute('aria-expanded', !isExpanded);

            // Animate hamburger menu
            this.classList.toggle('active');
        });
    }

    // Option card hover effects
    const optionCards = document.querySelectorAll('.option-card');
    optionCards.forEach(card => {
        card.addEventListener('mouseenter', function () {
            this.style.transform = 'translateY(-4px)';
        });

        card.addEventListener('mouseleave', function () {
            this.style.transform = 'translateY(0)';
        });
    });
});

// Trip option selection function
function selectTripOption(optionType) {
    if (optionType === 'automatic') {
        showAutomaticForm();
    } else if (optionType === 'manual') {
        showManualAssistant();
    }
}

// Show manual assistant interface
function showManualAssistant() {
    const content = `
        <div class="manual-assistant">
            <h2>üó∫Ô∏è ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏≠‡∏á</h2>
            <p>‡∏ö‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì AI ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</p>
            
            <div class="chat-interface">
                <div id="guide-chat-log" class="guide-chat-log">
                    <div class="ai-message">
                        <div class="message-content">
                            <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏ú‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì</p>
                            <p>‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô? ‡∏°‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà? ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏´‡∏°?</p>
                        </div>
                    </div>
                </div>
                
                <div class="guide-input-container">
                    <div class="input-wrapper">
                        <input type="text" id="guide-input" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°..." maxlength="500">
                        <button id="guide-send-btn" onclick="sendGuideMessage()">‡∏™‡πà‡∏á</button>
                    </div>
                </div>
            </div>
            
            <div class="quick-actions">
                <button onclick="sendQuickMessage('‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°')" class="quick-btn">
                    üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°
                </button>
                <button onclick="sendQuickMessage('‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á')" class="quick-btn">
                    üí∞ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏á‡∏ö
                </button>
                <button onclick="sendQuickMessage('‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á')" class="quick-btn">
                    üöó ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á
                </button>
            </div>
            
            <div class="form-actions">
                <button type="button" onclick="goBackToOptions()" class="back-button">‚Üê ‡∏Å‡∏•‡∏±‡∏ö</button>
            </div>
        </div>
    `;

    updateMainContent(content);

    // Add event listener for Enter key
    const guideInput = document.getElementById('guide-input');
    if (guideInput) {
        guideInput.addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                sendGuideMessage();
            }
        });
        guideInput.focus();
    }
}

// Send message to guide AI
async function sendGuideMessage() {
    const input = document.getElementById('guide-input');
    const sendBtn = document.getElementById('guide-send-btn');
    const chatLog = document.getElementById('guide-chat-log');

    if (!input || !input.value.trim()) return;

    const message = input.value.trim();
    input.value = '';
    sendBtn.disabled = true;
    sendBtn.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á...';

    // Add user message to chat
    addMessageToChat(chatLog, message, 'user');

    // Add typing indicator
    addTypingIndicator(chatLog);

    try {
        const response = await fetch('/api/messages', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ text: message, mode: 'guide' })
        });

        if (!response.ok) {
            throw new Error('Failed to send message');
        }

        const data = await response.json();

        // Remove typing indicator
        removeTypingIndicator(chatLog);

        if (data.assistant) {
            addMessageToChat(chatLog, data.assistant.text, 'ai', data.assistant.html);
        }

    } catch (error) {
        removeTypingIndicator(chatLog);
        addMessageToChat(chatLog, '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', 'ai');
    } finally {
        sendBtn.disabled = false;
        sendBtn.textContent = '‡∏™‡πà‡∏á';
        input.focus();
    }
}

// Send quick message
function sendQuickMessage(message) {
    const input = document.getElementById('guide-input');
    if (input) {
        input.value = message;
        sendGuideMessage();
    }
}

// Add message to chat log
function addMessageToChat(chatLog, message, type, html = null) {
    const messageDiv = document.createElement('div');
    messageDiv.className = type === 'user' ? 'user-message' : 'ai-message';

    const contentDiv = document.createElement('div');
    contentDiv.className = 'message-content';

    if (html && type === 'ai') {
        contentDiv.innerHTML = html;
    } else {
        contentDiv.textContent = message;
    }

    messageDiv.appendChild(contentDiv);
    chatLog.appendChild(messageDiv);
    chatLog.scrollTop = chatLog.scrollHeight;
}

// Add typing indicator
function addTypingIndicator(chatLog) {
    const typingDiv = document.createElement('div');
    typingDiv.className = 'ai-message typing-indicator';
    typingDiv.innerHTML = '<div class="message-content"><div class="typing-dots"><span></span><span></span><span></span></div></div>';
    chatLog.appendChild(typingDiv);
    chatLog.scrollTop = chatLog.scrollHeight;
}

// Remove typing indicator
function removeTypingIndicator(chatLog) {
    const typingIndicator = chatLog.querySelector('.typing-indicator');
    if (typingIndicator) {
        typingIndicator.remove();
    }
}

// Show trip planning form for automatic option
function showAutomaticForm() {
    const content = `
        <div class="planning-form">
            <h2>ü§ñ ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</h2>
            <p>‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á AI ‡∏à‡∏∞‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì</p>
            
            <form id="automaticTripForm" class="trip-form">
                <div class="form-group">
                    <label for="destination">‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏õ:</label>
                    <input type="text" id="destination" name="destination" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û, ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà, ‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï" required>
                </div>
                
                <div class="form-group">
                    <label for="duration">‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ß‡∏±‡∏ô):</label>
                    <select id="duration" name="duration" required>
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</option>
                        <option value="1">1 ‡∏ß‡∏±‡∏ô</option>
                        <option value="2">2 ‡∏ß‡∏±‡∏ô 1 ‡∏Ñ‡∏∑‡∏ô</option>
                        <option value="3">3 ‡∏ß‡∏±‡∏ô 2 ‡∏Ñ‡∏∑‡∏ô</option>
                        <option value="4">4 ‡∏ß‡∏±‡∏ô 3 ‡∏Ñ‡∏∑‡∏ô</option>
                        <option value="5">5 ‡∏ß‡∏±‡∏ô 4 ‡∏Ñ‡∏∑‡∏ô</option>
                        <option value="7">1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="budget">‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡∏ö‡∏≤‡∏ó):</label>
                    <select id="budget" name="budget" required>
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</option>
                        <option value="1000-3000">1,000 - 3,000 ‡∏ö‡∏≤‡∏ó</option>
                        <option value="3000-5000">3,000 - 5,000 ‡∏ö‡∏≤‡∏ó</option>
                        <option value="5000-10000">5,000 - 10,000 ‡∏ö‡∏≤‡∏ó</option>
                        <option value="10000-20000">10,000 - 20,000 ‡∏ö‡∏≤‡∏ó</option>
                        <option value="20000+">‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 20,000 ‡∏ö‡∏≤‡∏ó</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="interests">‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à:</label>
                    <div class="checkbox-group">
                        <label><input type="checkbox" value="‡∏ß‡∏±‡∏î"> ‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</label>
                        <label><input type="checkbox" value="‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥"> ‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏†‡∏π‡πÄ‡∏Ç‡∏≤</label>
                        <label><input type="checkbox" value="‡∏ó‡∏∞‡πÄ‡∏•"> ‡∏ó‡∏∞‡πÄ‡∏•‡πÅ‡∏•‡∏∞‡∏ä‡∏≤‡∏¢‡∏´‡∏≤‡∏î</label>
                        <label><input type="checkbox" value="‡∏≠‡∏≤‡∏´‡∏≤‡∏£"> ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ï‡∏•‡∏≤‡∏î</label>
                        <label><input type="checkbox" value="‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°"> ‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</label>
                        <label><input type="checkbox" value="‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á"> ‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÑ‡∏ô‡∏ó‡πå‡πÑ‡∏•‡∏ü‡πå</label>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="button" onclick="goBackToOptions()" class="back-button">‚Üê ‡∏Å‡∏•‡∏±‡∏ö</button>
                    <button type="button" onclick="processAutomaticTrip()" class="generate-button">üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ</button>
                </div>
            </form>
        </div>
    `;

    updateMainContent(content);
}

// Show trip planning form for manual option
function showManualForm() {
    const content = `
        <div class="planning-form">
            <h2>‚úã ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á</h2>
            <p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì AI ‡∏à‡∏∞‡∏Ñ‡∏≠‡∏¢‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</p>
            
            <div class="manual-options">
                <div class="manual-card" onclick="startManualPlanning('chat')">
                    <div class="manual-icon">üí¨</div>
                    <h3>‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏Å‡∏±‡∏ö AI</h3>
                    <p>‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å AI ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</p>
                    <button class="manual-button">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏ô‡∏ó‡∏ô‡∏≤</button>
                </div>
                
                <div class="manual-card" onclick="startManualPlanning('planner')">
                    <div class="manual-icon">üìã</div>
                    <h3>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô</h3>
                    <p>‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ AI ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠</p>
                    <button class="manual-button">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô</button>
                </div>
            </div>
            
            <div class="form-actions">
                <button type="button" onclick="goBackToOptions()" class="back-button">‚Üê ‡∏Å‡∏•‡∏±‡∏ö</button>
            </div>
        </div>
    `;

    document.getElementById('guide-content').innerHTML = content;
}

// Process automatic trip form
async function processAutomaticTrip() {
    const form = document.getElementById('automaticTripForm');
    const formData = new FormData(form);

    const destination = formData.get('destination');
    const duration = formData.get('duration');
    const budget = formData.get('budget');

    const interests = [];
    document.querySelectorAll('input[type="checkbox"]:checked').forEach(cb => {
        interests.push(cb.value);
    });

    // Create comprehensive prompt for AI
    const prompt = `‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ${destination} ${duration}‡∏ß‡∏±‡∏ô ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì${budget}‡∏ö‡∏≤‡∏ó ‡∏™‡∏ô‡πÉ‡∏à${interests.join(', ')} ‡∏Ç‡∏≠‡πÅ‡∏ú‡∏ô‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢`;

    // Show the result interface
    const resultContent = `
        <div class="trip-result">
            <h2>üó∫Ô∏è ‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ${destination}</h2>
            <div id="trip-chat-log" class="guide-chat-log">
                <div class="user-message">
                    <div class="message-content">${prompt}</div>
                </div>
            </div>
            <div class="form-actions">
                <button type="button" onclick="goBackToOptions()" class="back-button">‚Üê ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà</button>
            </div>
        </div>
    `;

    updateMainContent(resultContent);

    // Send to guide API
    const chatLog = document.getElementById('trip-chat-log');
    addTypingIndicator(chatLog);

    try {
        const response = await fetch('/api/messages', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ text: prompt, mode: 'guide' })
        });

        if (!response.ok) {
            throw new Error('Failed to send message');
        }

        const data = await response.json();

        // Remove typing indicator
        removeTypingIndicator(chatLog);

        if (data.assistant) {
            addMessageToChat(chatLog, data.assistant.text, 'ai', data.assistant.html);
        }

    } catch (error) {
        removeTypingIndicator(chatLog);
        addMessageToChat(chatLog, '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', 'ai');
    }
}

// Start manual planning
function startManualPlanning(type) {
    if (type === 'chat') {
        const prompt = encodeURIComponent('‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡∏´‡∏ô‡πà‡∏≠‡∏¢');
        window.location.href = `/chat?q=${prompt}`;
    } else if (type === 'planner') {
        // For now, redirect to chat with planner prompt
        const prompt = encodeURIComponent('‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏µ AI ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠');
        window.location.href = `/chat?q=${prompt}`;
    }
}

// Go back to options
function goBackToOptions() {
    location.reload();
}

function handleCategorySelection(category) {
    const placeholder = document.getElementById('guide-placeholder');
    const sections = document.getElementById('guide-sections');

    // Hide placeholder and show content
    if (placeholder) placeholder.style.display = 'none';
    if (sections) {
        sections.style.display = 'block';
        sections.innerHTML = generateCategoryContent(category);
    }
}

function handleTipSelection(tip) {
    const placeholder = document.getElementById('guide-placeholder');
    const sections = document.getElementById('guide-sections');

    // Hide placeholder and show content
    if (placeholder) placeholder.style.display = 'none';
    if (sections) {
        sections.style.display = 'block';
        sections.innerHTML = generateTipContent(tip);
    }
}

function generateCategoryContent(category) {
    const content = {
        '‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°': `
            <div class="content-section">
                <h2>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</h2>
                <div class="places-grid">
                    <div class="place-card">
                        <h3>‡∏ß‡∏±‡∏î‡∏≠‡∏£‡∏∏‡∏ì‡∏£‡∏≤‡∏ä‡∏ß‡∏£‡∏≤‡∏£‡∏≤‡∏°‡∏£‡∏≤‡∏ä‡∏ß‡∏£‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏´‡∏≤‡∏£</h3>
                        <p>‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø</p>
                    </div>
                    <div class="place-card">
                        <h3>‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡πâ‡∏≥‡∏≠‡∏±‡∏°‡∏û‡∏ß‡∏≤</h3>
                        <p>‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡πâ‡∏≥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°</p>
                    </div>
                    <div class="place-card">
                        <h3>‡πÄ‡∏Å‡∏≤‡∏∞‡πÄ‡∏™‡∏°‡πá‡∏î</h3>
                        <p>‡πÄ‡∏Å‡∏≤‡∏∞‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏¢‡∏≠‡∏á ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô</p>
                    </div>
                </div>
            </div>
        `,
        '‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß': `
            <div class="content-section">
                <h2>‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h2>
                <div class="routes-list">
                    <div class="route-item">
                        <h3>‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û 1 ‡∏ß‡∏±‡∏ô</h3>
                        <p>‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß ‚Üí ‡∏û‡∏£‡∏∞‡∏ö‡∏£‡∏°‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä‡∏ß‡∏±‡∏á ‚Üí ‡∏ß‡∏±‡∏î‡πÇ‡∏û‡∏ò‡∏¥‡πå ‚Üí ‡∏ï‡∏•‡∏≤‡∏î‡πÇ‡∏£‡∏á‡πÄ‡∏Å‡∏•‡∏∑‡∏≠</p>
                    </div>
                    <div class="route-item">
                        <h3>‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏° 2 ‡∏ß‡∏±‡∏ô 1 ‡∏Ñ‡∏∑‡∏ô</h3>
                        <p>‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡πâ‡∏≥‡∏≠‡∏±‡∏°‡∏û‡∏ß‡∏≤ ‚Üí ‡∏ß‡∏±‡∏î‡∏ö‡∏≤‡∏á‡∏Å‡∏∏‡πâ‡∏á ‚Üí ‡∏ä‡∏°‡∏´‡∏¥‡πà‡∏á‡∏´‡πâ‡∏≠‡∏¢ ‚Üí ‡∏ß‡∏±‡∏î‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏´‡∏•‡∏°</p>
                    </div>
                </div>
            </div>
        `,
        '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©': `
            <div class="content-section">
                <h2>‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©</h2>
                <div class="activities-list">
                    <div class="activity-item">
                        <h3>‡∏ä‡∏°‡∏´‡∏¥‡πà‡∏á‡∏´‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏°‡∏û‡∏ß‡∏≤</h3>
                        <p>‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏¢‡∏≤‡∏°‡∏Ñ‡πà‡∏≥‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏û‡∏•‡∏≤‡∏î ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 19:30-21:00 ‡∏ô.</p>
                    </div>
                    <div class="activity-item">
                        <h3>‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏ä‡∏°‡∏ß‡∏¥‡∏ñ‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏£‡∏¥‡∏°‡∏ô‡πâ‡∏≥</h3>
                        <p>‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏ß‡∏¥‡∏ñ‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏ä‡∏≤‡∏ß‡∏ö‡πâ‡∏≤‡∏ô‡∏£‡∏¥‡∏°‡∏Ñ‡∏•‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ä‡∏¥‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô</p>
                    </div>
                </div>
            </div>
        `,
        '‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà': `
            <div class="content-section">
                <h2>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à</h2>
                <div class="new-places">
                    <div class="place-card">
                        <h3>Sky Garden Observatory</h3>
                        <p>‡∏à‡∏∏‡∏î‡∏ä‡∏°‡∏ß‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á 314 ‡πÄ‡∏°‡∏ï‡∏£</p>
                    </div>
                    <div class="place-card">
                        <h3>‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏™‡∏¢‡∏≤‡∏°</h3>
                        <p>‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå‡πÅ‡∏´‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÑ‡∏ó‡∏¢</p>
                    </div>
                </div>
            </div>
        `
    };

    return content[category] || `
        <div class="content-section">
            <h2>${category}</h2>
            <p>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á</p>
        </div>
    `;
}

function generateTipContent(tip) {
    const tips = {
        '‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á': `
            <div class="content-section">
                <h2>‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</h2>
                <div class="tips-content">
                    <h3>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°:</h3>
                    <ul>
                        <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á</li>
                        <li>‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á (‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô, ‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï)</li>
                        <li>‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤</li>
                        <li>‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï</li>
                        <li>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏≠‡∏õ‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà</li>
                    </ul>
                </div>
            </div>
        `,
        '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏â‡∏•‡∏≤‡∏î': `
            <div class="content-section">
                <h2>‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏â‡∏•‡∏≤‡∏î</h2>
                <div class="tips-content">
                    <h3>‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏á‡∏¥‡∏ô:</h3>
                    <ul>
                        <li>‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤</li>
                        <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á Low Season</li>
                        <li>‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ï‡∏£‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</li>
                        <li>‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ</li>
                        <li>‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡πÅ‡∏ó‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏û‡∏á</li>
                    </ul>
                </div>
            </div>
        `
    };

    return tips[tip] || `
        <div class="content-section">
            <h2>${tip}</h2>
            <p>‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á</p>
        </div>
    `;
}

// Helper function to update main content
function updateMainContent(content) {
    const mainContent = document.querySelector('.main-content');
    if (mainContent) {
        mainContent.innerHTML = content;
    }
}

// Go back to trip options
function goBackToOptions() {
    location.reload(); // Simple way to go back to the original options
}